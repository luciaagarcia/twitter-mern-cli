{"version":3,"sources":["reportWebVitals.js","config.js","utils/api.js","utils/utils.js","components/posts/PostList.jsx","utils/apicalls.js","images/bird.png","components/App.jsx","components/HeaderDashboard.jsx","components/posts/AddPost.jsx","components/posts/EditPost.jsx","components/posts/MyPostList.jsx","index.js","components/Home.jsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","config","baseURL_API","process","clientID","axios","create","baseURL","monthNames","dayNames","getDateInStrFormat","date","getDay","getDate","getMonth","getFullYear","getHours","slice","getMinutes","getSeconds","PostList","useState","posts","setPosts","retweet","setretweet","like","setlike","getPosts","API","get","res","data","useEffect","CardTitle","tag","Alert","color","Badge","pill","length","Table","map","post","index","Row","Col","Card","CardBody","src","image","alt","user","id","message","align","xs","onClick","Date","publicationdate","imgStyle","maxWidth","HeaderDashboard","props","Navbar","light","expand","NavbarBrand","className","sessionStorage","getItem","Collapse","navbar","Nav","NavItem","NavLink","href","onShow","clientId","buttonText","theme","onLogoutSuccess","onLogout","AddPost","setMessage","checkPOSTNewPost","updateMyPosts","body","Form","FormGroup","Label","for","Input","style","height","type","name","value","placeholder","onChange","e","target","Button","preventDefault","email","result","postNewPost","EditPost","checkPUTPost","idpost","put","putExistingPost","_id","MyPostList","edit","setEdit","activeTab","setActiveTab","showDeleteModal","setShowDeleteModal","toggleTab","tab","handleUpdateMyPosts","deletePostSel","delete","checkDELETEPost","outline","handleShowEdit","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","askForDelete","Math","floor","random","tabs","classnames","active","TabContent","TabPane","tabId","sm","ReactDOM","render","exact","path","component","loginMessage","setLoginMessage","Container","Media","object","MyPlaceBird","onSuccess","googleUser","profile","getBasicProfile","setItem","getName","getEmail","getImageUrl","history","push","onFailure","response","show","setShow","clear","option","document","getElementById"],"mappings":"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","file":"static/js/main.286fd3a0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const config = {\n    baseURL_API: process.env.REACT_APP_APIURI,\n    clientID: process.env.REACT_APP_CLIENTID,\n}\n\nexport default config;","import axios from 'axios';\nimport config from '../config.js';\nexport default axios.create({\n  baseURL: config.baseURL_API\n\n});","export {\n    getDateInStrFormat\n  };\n  \n  /* Formatting date */\n  const monthNames = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\n  \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n  const dayNames = [\"Dom\", \"Lun\", \"Mar\", \"Mie\", \"Jue\",\"Vie\", \"Sab\"];\n  function getDateInStrFormat(date){\n    var strformatted = dayNames[date.getDay()]+\", \"+\n                       date.getDate()+\" \"+\n                       monthNames[date.getMonth()]+\" \"+\n                       date.getFullYear()+\", \"+\n                       (\"0\" + date.getHours()).slice(-2)+\":\"+\n                       (\"0\" + date.getMinutes()).slice(-2)+\":\"+\n                       (\"0\" + date.getSeconds()).slice(-2);\n    return strformatted;\n  }","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, CardTitle, Badge, CardBody, Table, Alert } from 'reactstrap';\nimport '../../styles.css';\nimport { AiOutlineHeart, AiOutlineRetweet } from 'react-icons/ai';\nimport { BsChat, BsUpload } from \"react-icons/bs\";\n\nimport { getAllPosts } from \"../../utils/apicalls.js\";\nimport { getDateInStrFormat } from \"../../utils/utils.js\";\n\nexport default function PostList(){\n  const [posts, setPosts] = useState([]);\n  const [retweet, setretweet] = useState(0);\n  const [like, setlike] = useState(0);\n\n\n  const getPosts = () => {\n    getAllPosts().then((posts) => {\n      setPosts(posts);\n    });\n  }\n\n  useEffect(() =>{\n    getPosts();\n  },[]);\n  \n\n  return (\n    <div>\n      <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\n      <Table>\n        <tbody>\n          { posts.map((post, index) => {\n            return(\n              <div>\n                  <Row>\n                    <Col>\n                      <Card>\n                        <CardBody>\n                          <Row><Col><strong><img src={post.image} alt=\"Img\"/> {post.user}</strong></Col></Row>\n                          <Row>\n                            <Col id='text-tweet'>\n                              {post.message}\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col align=\"left\" xs= \"5\">\n                              <Row id='iconos-tweet'>\n                                <Col xs=\"2\"><BsChat /></Col>\n                                <Col xs=\"2\"><AiOutlineRetweet onClick={() => setretweet(retweet + 1)} /><small>{retweet}</small></Col>\n                                <Col xs=\"2\"><AiOutlineHeart onClick={() => setlike(like + 1)}/><small>{like}</small></Col>\n                                <Col xs=\"2\"><BsUpload/></Col>\n                              </Row>\n                            </Col>\n                            <Col align=\"right\">\n                              <small>{getDateInStrFormat(new Date(post.publicationdate))}</small>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                  <br/>\n              </div>)\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n}","import API from './api';\n\nexport {\n  getAllPosts,\n  getMyPosts,\n  postNewPost,\n  putExistingPost,\n  deletePost\n};\n\nfunction getAllPosts() {\n  return API.get('/posts').then(res => res.data);\n}\n\nfunction getMyPosts(email) {\n  return API.get('/posts/all/'+email).then(res => res.data);\n}\n\nfunction postNewPost(email, user, image, message) {\n  return API.post('/posts', {\n    email,\n    user,\n    image,\n    message}).then(result => result.data);\n}\n\nfunction putExistingPost(idpost, message) {\n  return API.put('/posts/'+idpost, {\n    message}).then(result => result.data);\n}\n\nfunction deletePost(idpost) {\n  return API.delete('/posts/'+idpost).then(result => result.data);\n}","export default __webpack_public_path__ + \"static/media/bird.7a65b904.png\";","import React, { useState } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavItem, Media, Row, Col, Container, Alert } from 'reactstrap';\r\nimport PostList from './posts/PostList';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport config from '../config.js';\r\nimport MyPlaceBird from '../images/bird.png';\r\n\r\nvar imgStyle = {\r\n  maxWidth: \"85px\",\r\n};\r\nexport default function App(props){\r\n\r\n  const [loginMessage, setLoginMessage] = useState(null);\r\n  \r\n  const responseGoogleSuccess = (googleUser) => {\r\n    var profile = googleUser.getBasicProfile(); //With this we create a session\r\n\r\n    sessionStorage.setItem('name', profile.getName()); //With this we will have tehe as properties so we would be able to catch them later\r\n    sessionStorage.setItem('email', profile.getEmail());\r\n    sessionStorage.setItem('image', profile.getImageUrl());\r\n    \r\n    props.history.push(\"/home\");\r\n  }\r\n\r\n  const responseGoogleFailure = (response) => {\r\n    setLoginMessage(<Alert color=\"danger\">Inicio de sesión incorrecto. Inténtelo de nuevo</Alert>);\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Navbar color=\"primary\" light expand=\"md\">\r\n          <Media style={imgStyle} object src={MyPlaceBird} alt=\"Bird\"/><NavbarBrand><h4 className=\"text-white\">Twitter</h4></NavbarBrand>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                {loginMessage}\r\n                <GoogleLogin\r\n                  clientId={config.clientID} //Here comes MY OWN GOOGLE ID on google developers webpage\r\n                  buttonText=\"Login with Google\"\r\n                  theme='dark'\r\n                  onSuccess={responseGoogleSuccess}\r\n                  onFailure={responseGoogleFailure}\r\n                />\r\n              </NavItem>\r\n            </Nav>\r\n          </Navbar>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col xs= \"12\">\r\n          <PostList/>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Collapse, Navbar, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport { FaCogs } from 'react-icons/fa';\nimport { GoogleLogout } from 'react-google-login';\nimport config from '../config.js';\nimport '../css/home.css';\n\n\nexport default function HeaderDashboard(props){\n\n  return (\n    <Navbar color=\"primary\" light expand=\"md\">\n      <NavbarBrand><FaCogs color=\"black\"/><span className=\"text-title\"><strong> Dashboard:</strong> {sessionStorage.getItem('name')}</span></NavbarBrand>\n      <Collapse navbar>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink href=\"#\" onClick={() => props.onShow(1)}><span className=\"text-title\">Todos los Posts</span></NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"#\" onClick={() => props.onShow(2)}><span className=\"text-title\">Mis Posts</span></NavLink>\n          </NavItem>\n          <NavItem>\n            <GoogleLogout\n              clientId={config.clientID}\n              buttonText=\"Logout\"\n              theme='dark'\n              onLogoutSuccess={props.onLogout}\n            />\n          </NavItem>\n        </Nav>\n      </Collapse>\n  </Navbar>\n  );\n}\n","import React, { useState } from 'react';\nimport { Card, CardTitle, Label, Button, Form, FormGroup, Input } from 'reactstrap';\n\nimport { postNewPost } from \"../../utils/apicalls.js\";\n\nexport default function AddPost(props){\n\n  const [message, setMessage] = useState('');\n\n  const addPost = (e) => {\n    e.preventDefault();\n    //Save post in database with post api call\n    postNewPost(sessionStorage.getItem('email'),sessionStorage.getItem('name'), sessionStorage.getItem('image'), message)\n      .then((res) => checkPOSTNewPost(res));\n  }\n\n  //Check the response from the server\n  const checkPOSTNewPost = (res) => {\n    if (res === \"OK\"){\n      //TODO Show Modal when a new post is added\n      props.updateMyPosts();\n    }else{\n      //TODO Show Modal when an error adding a new post occurs\n    }\n  }\n\n  return (\n    <div>\n      <Card body>\n        <CardTitle tag=\"h5\">Añadir un nuevo post</CardTitle>\n        <Form>\n          <FormGroup>\n            <Label for=\"aMensaje\">Mensaje</Label>\n            <Input style={{height: '200px'}} type=\"textarea\" name=\"message\" value={message} id=\"aMensaje\" placeholder=\"Introduce un mensaje\" onChange={(e) => setMessage(e.target.value)}/>\n          </FormGroup>\n          <Button color=\"primary\" onClick={addPost}>Añadir</Button>\n        </Form>\n      </Card>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport { Card, CardTitle, Label, Button, Form, FormGroup, Input } from 'reactstrap';\n\nimport { putExistingPost } from \"../../utils/apicalls.js\";\n\nexport default function EditPost(props){\n\n  const [message, setMessage] = useState(props.post.message);\n\n  const editPost = (e) => {\n    e.preventDefault();\n    //Update post in database with put api call\n    putExistingPost(props.post._id, message)\n      .then((res) => checkPUTPost(res));\n  }\n\n  //Check the response from the server\n  const checkPUTPost = (res) => {\n    if (res === \"OK\"){\n      //TODO Show Modal when a the post is updated\n      props.updateMyPosts();\n    }else{\n      //TODO Show Modal when an error updating the post occurs\n    }\n  }\n\n  useEffect(() =>{\n    setMessage(props.post.message);\n  },[props.post]);\n\n  return (\n    <div>\n      <Card body>\n        <CardTitle tag=\"h5\">Editar post</CardTitle>\n        <Form>\n          <FormGroup>\n            <Label for=\"aDescripcion\">Mensaje</Label>\n            <Input style={{height: '200px'}} type=\"textarea\" name=\"message\" id=\"aDescripcion\" placeholder=\"Introduce un mensaje\" value={message} onChange={(e) => setMessage(e.target.value)}/>\n          </FormGroup>\n            <Button color=\"primary\" onClick={editPost}>Actualizar</Button>\n        </Form>\n      </Card>\n    </div>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport '../../styles.css';\n\n\nimport { Row, Col, Card, CardTitle, Badge, CardBody,\nTable, Alert, Button, Nav, NavItem, NavLink, TabContent,\nTabPane, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nimport { FaEdit, FaTrashAlt } from 'react-icons/fa';\nimport { AiOutlineHeart, AiOutlineRetweet } from 'react-icons/ai';\nimport { BsChat, BsUpload } from \"react-icons/bs\";\n\nimport { getMyPosts, deletePost } from \"../../utils/apicalls.js\";\nimport { getDateInStrFormat } from \"../../utils/utils.js\";\n\nimport AddPost from './AddPost';\nimport EditPost from './EditPost';\n\nexport default function MyPostList(props){\n\n  const [posts, setPosts] = useState([]);\n  const [edit, setEdit] = useState(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\n  const [activeTab, setActiveTab] = useState('1');\n  const [showDeleteModal, setShowDeleteModal] = useState(null);\n\n  const getPosts = () => {\n      getMyPosts(sessionStorage.getItem('email')).then((posts) => {\n          setPosts(posts);\n      });\n  }\n\n  const toggleTab = (tab) => {\n    if (activeTab !== tab)\n      setActiveTab(tab);\n  }\n\n  const handleUpdateMyPosts = () => {\n    getPosts();\n  }\n\n  const askForDelete = (post) => {\n    setShowDeleteModal(\n      <Modal isOpen=\"true\" className={props.className}>\n        <ModalHeader>Eliminar post</ModalHeader>\n        <ModalBody>\n          Se va a eliminar el post:<br/><small><strong>{post.message}</strong></small>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={() => deletePostSel(post)}>Eliminar</Button>{' '}\n          <Button color=\"secondary\" onClick={() => setShowDeleteModal(null)}>Cancelar</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n\n  //Deleting selected post\n  const deletePostSel = (post) => {\n    deletePost(post._id)\n      .then((res) => checkDELETEPost(res));\n  }\n\n  //Check the response from server\n  const checkDELETEPost = (res) => {\n    //if ok, remove modal and reset edit component\n    if (res === \"OK\"){\n      setShowDeleteModal(null);\n      setEdit(<Alert color=\"warning\">Seleccione editar un post de la lista</Alert>);\n      handleUpdateMyPosts();\n    }else{\n      //TODO Show a modal when error from server\n    }\n  }\n\n  const handleShowEdit = (post) => {\n    setEdit(<EditPost post= {post} updateMyPosts = {handleUpdateMyPosts} />);\n  }\n\n  useEffect(() =>{\n    getPosts();\n  },[]);\n\n  return(\n    <div>\n      {showDeleteModal}\n      <Row>\n        <Col xs=\"7\">\n          <CardTitle tag=\"center\"><Alert color=\"primary\"><strong>Mis Posts publicados </strong><Badge pill>{posts.length}</Badge></Alert></CardTitle>\n          <Table>\n            <tbody>\n              { posts.map((post, index) => {\n                return(<div>\n                  <div>\n                  <Row>\n                    <Col>\n                      <Card>\n                        <CardBody>\n                          <Row><Col><strong><img src={post.image} alt=\"Img\"/> {post.user}</strong></Col>\n                               <Col align=\"right\">\n                                  <Button outline onClick={() => handleShowEdit(post)}><FaEdit /></Button>\n                                  {' '}\n                                  <Button outline onClick={() => askForDelete(post)}><FaTrashAlt /></Button>\n                                </Col>\n                                </Row>\n                          <Row>\n                            <Col>\n                              {post.message}\n                            </Col>\n                          </Row>\n                          <Row>\n                            <Col align=\"left\" xs= \"8\">\n                              <Row>\n                                <Col xs=\"2\"><BsChat /></Col>\n                                <Col xs=\"2\"><AiOutlineRetweet /><small>{Math.floor((Math.random() * 10) + 1)}</small></Col>\n                                <Col xs=\"2\"><AiOutlineHeart /><small>{Math.floor((Math.random() * 100) + 1)}</small></Col>\n                                <Col xs=\"2\"><BsUpload/></Col>\n                              </Row>\n                            </Col>\n                            <Col align=\"right\">\n                              <small>{getDateInStrFormat(new Date(post.publicationdate))}</small>\n                            </Col>\n                          </Row>\n                        </CardBody>\n                      </Card>\n                    </Col>\n                  </Row>\n                  <br/>\n              </div>\n                </div>)\n              })}\n            </tbody>\n          </Table>\n        </Col>\n        <Col xs=\"5\">\n          <Nav tabs>\n            <NavItem>\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '1' })} onClick={() => toggleTab('1')}>\n                Añadir\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"#\" className={classnames({ active: activeTab === '2' })} onClick={() => toggleTab('2')}>\n                Editar\n              </NavLink>\n            </NavItem>\n          </Nav>\n          <TabContent activeTab={activeTab}>\n            <TabPane tabId=\"1\">\n              <Row>\n                <Col sm=\"12\">\n                  <AddPost updateMyPosts = {handleUpdateMyPosts}/>\n                </Col>\n              </Row>\n            </TabPane>\n            <TabPane tabId=\"2\">\n              <Row>\n                <Col sm=\"12\">\n                  {edit}\n                </Col>\n              </Row>\n            </TabPane>\n          </TabContent>\n        </Col>\n      </Row>\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './components/App';\nimport Home from './components/Home';\n\nReactDOM.render(<HashRouter>\n      <div>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/home\" component={Home} />\n      </div>\n   </HashRouter >, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","import React, { useState } from 'react';\nimport {Container, Row, Col } from 'reactstrap';\nimport HeaderDashboard from './HeaderDashboard';\nimport MyPostList from './posts/MyPostList';\nimport PostList from './posts/PostList';\nimport '../css/home.css';\n\nexport default function Home(props){\n\n  const [show, setShow] = useState(<PostList />);\n \n  const handleLogout = () => {\n    sessionStorage.clear();\n    props.history.push(\"/\");\n  }\n  const handleOnShow = (option) => {\n    if (option === 1){\n      setShow(<PostList />);\n    }else if (option === 2){\n      setShow(<MyPostList />);\n    }\n  }\n  if (sessionStorage.getItem(\"name\") === null){\n    props.history.push(\"/\");\n  }\n  else{\n    return (\n      <Container>\n        <Row>\n          <Col><HeaderDashboard onLogout={handleLogout} onShow= {handleOnShow} /></Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\">\n              {show}\n            </Col>\n        </Row>\n      </Container>\n    );\n  }\n}"],"sourceRoot":""}